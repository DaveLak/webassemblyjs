0x0:	 0x0 0x61 0x73 0x6d 										 ; wasm magic header
0x4:	 0x1 0x0 0x0 0x0 										 ; wasm version
; section Type
0xa:	 0x1 										 ; section code
0xa:	 0x8 										 ; section size
0xb:	 0x2 										 ; num types
; type 0
0xc:	 0x60 										 ; func
0xd:	 0x0 										 ; number
0xe:	 0x1 										 ; number
0xf:	 0x7f 										 ; i32
; type 1
0x10:	 0x60 										 ; func
0x11:	 0x0 										 ; number
0x12:	 0x0 										 ; number
; section Import
0x14:	 0x2 										 ; section code
0x14:	 0x29 										 ; section size
0x15:	 0x5 										 ; number of imports
; import header 0
0x15:	 0x1 										 ; string length
0x17:	  										 ; module name (a)
0x17:	 0x3 										 ; string length
0x1b:	  										 ; name (ef0)
0x1c:	 0x0 										 ; import kind
0x1d:	 0x0 										 ; type index
; import header 1
0x1d:	 0x1 										 ; string length
0x1f:	  										 ; module name (a)
0x1f:	 0x3 										 ; string length
0x23:	  										 ; name (ef1)
0x24:	 0x0 										 ; import kind
0x25:	 0x0 										 ; type index
; import header 2
0x25:	 0x1 										 ; string length
0x27:	  										 ; module name (a)
0x27:	 0x3 										 ; string length
0x2b:	  										 ; name (ef2)
0x2c:	 0x0 										 ; import kind
0x2d:	 0x0 										 ; type index
; import header 3
0x2d:	 0x1 										 ; string length
0x2f:	  										 ; module name (a)
0x2f:	 0x3 										 ; string length
0x33:	  										 ; name (ef3)
0x34:	 0x0 										 ; import kind
0x35:	 0x0 										 ; type index
; import header 4
0x35:	 0x1 										 ; string length
0x37:	  										 ; module name (a)
0x37:	 0x3 										 ; string length
0x3b:	  										 ; name (ef4)
0x3c:	 0x0 										 ; import kind
0x3d:	 0x0 										 ; type index
; section Function
0x3f:	 0x3 										 ; section code
0x3f:	 0x7 										 ; section size
0x40:	 0x6 										 ; num funcs
0x41:	 0x0 										 ; type index
0x42:	 0x0 										 ; type index
0x43:	 0x0 										 ; type index
0x44:	 0x0 										 ; type index
0x45:	 0x0 										 ; type index
0x46:	 0x1 										 ; type index
; section Table
0x48:	 0x4 										 ; section code
0x48:	 0x9 										 ; section size
0x49:	 0x2 										 ; num tables
0x49:	 0x2 										 ; num elements
0x4a:	 0x70 										 ; element type
0x4b:	 0x1 										 ; limit type
0x4c:	 0x1e 										 ; min
0x4d:	 0x1e 										 ; max
0x4e:	 0x70 										 ; element type
0x4f:	 0x1 										 ; limit type
0x50:	 0x1e 										 ; min
0x51:	 0x1e 										 ; max
; section Export
0x53:	 0x7 										 ; section code
0x53:	 0x8 										 ; section size
0x54:	 0x1 										 ; num exports
0x54:	 0x4 										 ; string length
0x59:	  										 ; export name (test)
0x5a:	 0x0 										 ; export kind
0x5b:	 0xa 										 ; export index
; section Element
0x5d:	 0x9 										 ; section code
0x5d:	 0x3a 										 ; section size
0x5e:	 0x6 										 ; num elements
0x5f:	 0x0 										 ; bitfield
0x60:	 0x41 										 ; i32.const
0x61:	 0x2 										 ; i32 value
0x62:	 0xb 										 ; end
0x63:	 0x4 										 ; num indices
0x64:	 0x3 										 ; index
0x65:	 0x1 										 ; index
0x66:	 0x4 										 ; index
0x67:	 0x1 										 ; index
0x68:	 0x1 										 ; bitfield
0x6a:	 0x4 										 ; num indices
0x6b:	 0x2 										 ; index
0x6c:	 0x7 										 ; index
0x6d:	 0x1 										 ; index
0x6e:	 0x8 										 ; index
0x6f:	 0x0 										 ; bitfield
0x70:	 0x41 										 ; i32.const
0x71:	 0xc 										 ; i32 value
0x72:	 0xb 										 ; end
0x73:	 0x5 										 ; num indices
0x74:	 0x7 										 ; index
0x75:	 0x5 										 ; index
0x76:	 0x2 										 ; index
0x77:	 0x3 										 ; index
0x78:	 0x6 										 ; index
0x79:	 0x1 										 ; bitfield
0x7b:	 0x5 										 ; num indices
0x7c:	 0x5 										 ; index
0x7d:	 0x9 										 ; index
0x7e:	 0x2 										 ; index
0x7f:	 0x7 										 ; index
0x80:	 0x6 										 ; index
0x81:	 0x2 										 ; bitfield
0x82:	 0x1 										 ; tableidx
0x83:	 0x41 										 ; i32.const
0x84:	 0x3 										 ; i32 value
0x85:	 0xb 										 ; end
0x87:	 0x4 										 ; num indices
0x88:	 0x1 										 ; index
0x89:	 0x3 										 ; index
0x8a:	 0x1 										 ; index
0x8b:	 0x4 										 ; index
0x8c:	 0x2 										 ; bitfield
0x8d:	 0x1 										 ; tableidx
0x8e:	 0x41 										 ; i32.const
0x8f:	 0xb 										 ; i32 value
0x90:	 0xb 										 ; end
0x92:	 0x5 										 ; num indices
0x93:	 0x6 										 ; index
0x94:	 0x3 										 ; index
0x95:	 0x2 										 ; index
0x96:	 0x5 										 ; index
0x97:	 0x7 										 ; index
; section Code
0x99:	 0xa 										 ; section code
0x99:	 0x27 										 ; section size
0x9a:	 0x6 										 ; number functions
; function body 0
0x9b:	 0x4 										 ; function body size
0x9c:	 0x0 										 ; num locals
0x9d:	 0x41 										 ; i32.const
0x9e:	 0x5 										 ; i32 value
0x9f:	 0xb 										 ; end
; function body 1
0xa0:	 0x4 										 ; function body size
0xa1:	 0x0 										 ; num locals
0xa2:	 0x41 										 ; i32.const
0xa3:	 0x6 										 ; i32 value
0xa4:	 0xb 										 ; end
; function body 2
0xa5:	 0x4 										 ; function body size
0xa6:	 0x0 										 ; num locals
0xa7:	 0x41 										 ; i32.const
0xa8:	 0x7 										 ; i32 value
0xa9:	 0xb 										 ; end
; function body 3
0xaa:	 0x4 										 ; function body size
0xab:	 0x0 										 ; num locals
0xac:	 0x41 										 ; i32.const
0xad:	 0x8 										 ; i32 value
0xae:	 0xb 										 ; end
; function body 4
0xaf:	 0x4 										 ; function body size
0xb0:	 0x0 										 ; num locals
0xb1:	 0x41 										 ; i32.const
0xb2:	 0x9 										 ; i32 value
0xb3:	 0xb 										 ; end
; function body 5
0xb4:	 0xc 										 ; function body size
0xb5:	 0x0 										 ; num locals
0xb6:	 0x41 										 ; i32.const
0xb7:	 0xd 										 ; i32 value
0xb8:	 0x41 										 ; i32.const
0xb9:	 0x2 										 ; i32 value
0xba:	 0x41 										 ; i32.const
0xbb:	 0x3 										 ; i32 value
0xbd:	 0xfc0e 										 ; table.copy
0xbe:	 0x0 										 ; argument 0
0xbf:	 0x0 										 ; argument 1
0xc0:	 0xb 										 ; end
; end of program
